[{"C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\index.js":"1","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\reportWebVitals.js":"2","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\index.js":"3","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\reportWebVitals.js":"4","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\App.js":"5","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeCreate.js":"6","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeGet.js":"7","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\List.js":"8","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\Alert.js":"9","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\App.js":"10","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeCreate.js":"11","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeGet.js":"12","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\List.js":"13","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\Alert.js":"14"},{"size":511,"mtime":1610373235291,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":511,"mtime":1610373235291,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":626,"mtime":1610458097133,"results":"21","hashOfConfig":"16"},{"size":10864,"mtime":1610708922311,"results":"22","hashOfConfig":"16"},{"size":186,"mtime":1610372912379,"results":"23","hashOfConfig":"16"},{"size":4425,"mtime":1610468898503,"results":"24","hashOfConfig":"16"},{"size":460,"mtime":1610391595245,"results":"25","hashOfConfig":"16"},{"size":626,"mtime":1610458097133,"results":"26","hashOfConfig":"19"},{"size":9445,"mtime":1610470713716,"results":"27","hashOfConfig":"19"},{"size":186,"mtime":1610372912379,"results":"28","hashOfConfig":"19"},{"size":4425,"mtime":1610468898503,"results":"29","hashOfConfig":"19"},{"size":460,"mtime":1610391595245,"results":"30","hashOfConfig":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"hr740q",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1bbrozj",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},"C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\index.js",[],["64","65"],"C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\reportWebVitals.js",[],"c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\index.js",[],["66","67"],"c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\reportWebVitals.js",[],"C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\App.js",[],"C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeCreate.js",["68","69"],"import  React   from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport List from './List';\r\nimport Alert from './Alert';\r\nimport axios from 'axios';\r\n\r\nconst URL = 'https://dpsbootcamp.herokuapp.com/api/v1/recipes';\r\n\r\n\r\nconst getLocalStorage = () => {\r\n    let data = localStorage.getItem('data');\r\n    if (data) {\r\n        return localStorage.getItem('data')\r\n    }\r\n    else {\r\n        return []\r\n    }\r\n}\r\n\r\nfunction RecipeCreate ()  {\r\n    const [name, setName] = useState('');\r\n    const [nameDisplay, setNameDisplay] = useState('');\r\n    const [timeDisplay, setTimeDisplay] = useState('')\r\n    const [time, setTime] = useState('');\r\n    const [ingredientName, setIngredientName] = useState('');\r\n    const [ingredient, setIngredient] = useState([]);\r\n    const [descriptionName, setDescriptionName] = useState('');\r\n    const [description, setDescription] = useState([]);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editID, setEditID] = useState(null);\r\n    const [alert, setAlert] = useState({show: false, msg:'', type:''})\r\n\r\n    const addName = () => {\r\n        showAlert(true, 'success', 'Item is added')\r\n         setNameDisplay(name)\r\n        setName('');\r\n            \r\n    }\r\n\r\n    const addTime = () => {\r\n        showAlert(true, 'success', 'Item is added')\r\n        setTimeDisplay(time)\r\n        setTime('');\r\n    }\r\n\r\n    const addMoreIngredient = () => {\r\n        //console.log('boo')\r\n        if  (!ingredientName) {\r\n            showAlert(true, 'danger', 'Please enter value')\r\n        }\r\n        else if (ingredientName && isEditing) {\r\n            setIngredient(ingredient.map((item) => {\r\n                if (item.id === editID) {\r\n                    return {...item, ingredientName: ingredientName}\r\n                }\r\n                return item\r\n            })\r\n            )\r\n            setIngredientName('')\r\n            setEditID(null);\r\n            setIsEditing(false);\r\n            showAlert(true, 'success', 'value changed')\r\n        }\r\n        else {\r\n            //show alert\r\n            //create new ITem\r\n            showAlert(true, 'success', 'Item is added')\r\n            const newItem = {id: new Date().getTime().toString(), ingredientName: ingredientName}\r\n            setIngredient([...ingredient, newItem]);\r\n            setIngredientName('');\r\n        }\r\n    }\r\n\r\n    const showAlert = (show=false, type=\"\", msg=\"\" ) => {\r\n        setAlert({show, type, msg})\r\n    }\r\n\r\n    const addMoreDescription = () => {\r\n        //console.log('boo')\r\n        if  (!descriptionName) {\r\n            showAlert(true, 'danger', 'Please enter value')\r\n        }\r\n        else if (descriptionName && isEditing) {\r\n            setDescription(description.map((item) => {\r\n                if (item.id === editID) {\r\n                    return {...item, descriptionName: descriptionName}\r\n                }\r\n                return item\r\n            })\r\n            )\r\n            setDescriptionName('')\r\n            setEditID(null);\r\n            setIsEditing(false);\r\n            showAlert(true, 'success', 'value changed')\r\n        }\r\n        else {\r\n            showAlert(true, 'success', 'Item is added')\r\n            const newItemStep = {id: new Date().getTime().toString(), descriptionName: descriptionName}\r\n            setDescription([...description, newItemStep]);\r\n            setDescriptionName('');\r\n        }\r\n            \r\n    }\r\n\r\n    const myJSON = JSON.stringify({title: nameDisplay, time: timeDisplay, ingredients: ingredient.map((el) => el.ingredientName), descriptions: description.map((el) => el.descriptionName)});\r\n\r\n    const postRecipe = async () => {\r\n\r\n        console.log(myJSON);\r\n         try {\r\n             await fetch(URL, {\r\n                 method: 'POST',\r\n                 headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                 body: myJSON,\r\n             });\r\n         } catch(error) {\r\n             console.log(error);\r\n         }\r\n\r\n        // axios({\r\n        //     url: URL,\r\n        //     method: 'post',\r\n        //     mode: 'cors',\r\n        //     headers: {\"Access-Control-Allow-Origin\": \"*\"},\r\n        //     data: JSON.stringify({ \r\n        //         \"ingredients\": \"dsa\",\r\n        //         \"desctriptions\": \"sad\",\r\n        //         \"title\": \"bla2\",\r\n        //         \"time\": \"20\"\r\n        //     })\r\n           \r\n        // })\r\n        // .then(function (response) {\r\n        //     console.log(response);\r\n        //   })\r\n        //   .catch(function (error) {\r\n        //     console.log(error);\r\n        //   });\r\n     }; \r\n    \r\n    const submitButton =  ((e) => {\r\n        e.preventDefault();\r\n        postRecipe();\r\n    })\r\n\r\n    const clearList = () => {\r\n        showAlert(true, 'danger', 'emptylist')\r\n        setNameDisplay('');\r\n        setTimeDisplay('');\r\n        setIngredient([]);\r\n        setDescription([]);\r\n    }\r\n\r\n    const removeIngredient = (id) => {\r\n        showAlert(true, 'danger', 'item is removed')\r\n        setIngredient(ingredient.filter((item) => item.id !== id ))\r\n    }\r\n\r\n    const removeDescription = (id) => {\r\n        showAlert(true, 'danger', 'item is removed')\r\n        setDescription(description.filter((item) => item.id !== id ))\r\n    }\r\n\r\n\r\n    const removeName = () => {\r\n        showAlert(true, 'danger', 'item is removed')\r\n        setNameDisplay('')\r\n    }\r\n\r\n\r\n    const removeTime = () => {\r\n        showAlert(true, 'danger', 'item is removed')\r\n        setTimeDisplay('')\r\n    }\r\n\r\n    const editIngredient = (id) => {\r\n        const specificItem = ingredient.find((item) => item.id === id);\r\n        setIsEditing(true);\r\n        setEditID(id);\r\n        setIngredientName(specificItem.ingredientName);\r\n    }\r\n\r\n    const editDescription = (id) => {\r\n        const specificItem = description.find((item) => item.id === id);\r\n        setIsEditing(true);\r\n        setEditID(id);\r\n        setDescriptionName(specificItem.descriptionName);\r\n    }\r\n\r\n    const editName = () => {\r\n        setIsEditing(true);\r\n        setName(nameDisplay);\r\n    }\r\n\r\n    const editTime = () => {\r\n        setIsEditing(true);\r\n        setTime(timeDisplay);\r\n    }\r\n\r\n    // useEffect(()=> {\r\n    //     postRecipe();\r\n    // }, [submitButton])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('data',JSON.stringify({title: nameDisplay, time: timeDisplay, ingredients: ingredient.map((el) => el.ingredientName), descriptions: description.map((el) => el.descriptionName)}))\r\n    }, [nameDisplay, timeDisplay, ingredient, description])\r\n\r\n\r\n    // useEffect(()=> {\r\n    //     localStorage.setItem('data', JSON.stringify(name, time, ingredient, description))\r\n    // }, [ingredient, description, name, time])\r\n\r\n    return (\r\n        <div className='root'>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} className=\"alert-section\">\r\n                {alert.show && <Alert {...alert} removeAlert={showAlert} ingredient={ingredient} description={description}/>}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper className='paper' elevation={3}>\r\n                        <h3>Create your own recipe</h3>\r\n                        <div className='textFields'>\r\n                            <TextField\r\n                                label=\"Enter name of your recipe\" \r\n                                type=\"text\"\r\n                                fullWidth= {true}\r\n                                value={name}\r\n                                onChange={(e) => {setName(e.target.value)}}\r\n                    \r\n                            />\r\n                            <AddCircleIcon className=\"cursor\" onClick={addName}>\r\n                            </AddCircleIcon>\r\n                            <TextField\r\n                                label=\"Add the time needed in minutes\" \r\n                                type=\"number\"\r\n                                fullWidth={true}\r\n                                value={time}\r\n                                onChange={(e) => {setTime(e.target.value)}}\r\n                            />\r\n                            <AddCircleIcon className=\"cursor\" onClick={addTime}>\r\n                            </AddCircleIcon>\r\n                            <TextField\r\n                                label=\"Add your ingredient one by one\" \r\n                                type=\"text\"\r\n                                fullWidth={true}\r\n                                value={ingredientName}\r\n                                onChange={(e) => {setIngredientName(e.target.value)}}\r\n                            />\r\n                            <AddCircleIcon className=\"cursor\" onClick={addMoreIngredient}>\r\n                            </AddCircleIcon>\r\n                            <TextField\r\n                                label=\"Add neccessary steps one by one\" \r\n                                type=\"text\"\r\n                                fullWidth={true}\r\n                                value={descriptionName}\r\n                                onChange={(e) => {setDescriptionName(e.target.value)}}\r\n                            />\r\n                            <AddCircleIcon className=\"cursor\" onClick={addMoreDescription}>\r\n                            </AddCircleIcon>\r\n\r\n                        </div>\r\n                        \r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Paper className='paper' elevation={3}>\r\n                        <h3>Your magic recipe </h3>\r\n                        <List \r\n                            nameDisplay={nameDisplay}\r\n                            timeDisplay={timeDisplay} \r\n                            time={time} \r\n                            ingredients={ingredient} \r\n                            descriptions={description} \r\n                            removeIngredient={removeIngredient} \r\n                            removeDescription={removeDescription} \r\n                            removeName={removeName} \r\n                            removeTime={removeTime}\r\n                            editIngredient={editIngredient}\r\n                            editDescription={editDescription}\r\n                            editName={editName}\r\n                            editTime={editTime}\r\n                            />\r\n                        <button className=\"btn\" onClick={clearList}>clear all</button>\r\n                        <button className=\"btn\" onClick={submitButton}>submit</button>\r\n                    </Paper>\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeCreate;\r\n","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeGet.js",["70"],"import { React, useState } from 'react';\r\n\r\nconst recipeGet = () => {\r\n    return (\r\n        <div>\r\n            Get recipes here.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default recipeGet;\r\n","C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\List.js",[],"C:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\Alert.js",["71"],"import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({type, msg, removeAlert, ingredient, description}) => {\r\n    useEffect(() => {\r\n        const timeout = setTimeout(()=>{\r\n            removeAlert()\r\n        },3000)\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    }, [ingredient, description])\r\n    return (\r\n        <h2 className={`alert alert-${type}`}>\r\n            {msg}\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\App.js",[],"c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeCreate.js",[],"c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\recipeGet.js",["72"],"c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\List.js",[],"c:\\Users\\Vlad\\Google Drive\\Meruyert CV documents\\Programming-projects\\DPS_bootcamp\\recipes-app\\src\\components\\Alert.js",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":14,"column":7,"nodeType":"82","messageId":"83","endLine":14,"endColumn":22},{"ruleId":"80","severity":1,"message":"85","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":11,"column":8,"nodeType":"88","endLine":11,"endColumn":33,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"85","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":11,"column":8,"nodeType":"88","endLine":11,"endColumn":33,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'getLocalStorage' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'removeAlert'. Either include it or remove the dependency array. If 'removeAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},"Update the dependencies array to be: [ingredient, description, removeAlert]",{"range":"98","text":"99"},{"range":"100","text":"99"},[302,327],"[ingredient, description, removeAlert]",[302,327]]